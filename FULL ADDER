//Design Code

// Gate Level MOdelling
module full_adder(input a,b,cin,output sum,carry);
wire w1,w2,w3;
xor x1(w1,a,b);
xor x2(sum,w1,cin);
and a1(w2,a,b);
and a2(w3,w1,cin);
or o1(carry,w2,w3);
endmodule

//Data Flow Level Modelling
module full_adder(input a,b,cin,output sum,carry);
assign sum=a^b^cin;
assign carry=(a&b)|(b&cin)|(a&cin);
endmodule

//Behavioral Level Modelling

module full_adder(a,b,cin,sum,carry);
input a,b,cin;
output reg  sum,carry;
always@(*)
begin
{carry,sum}=a+b+cin;
end
endmodule


//Testbench

module full_adder_tb();
reg a,b,cin;
wire sum,carry;
integer i;

full_adder dut(.a(a),.b(b),.cin(cin),.sum(sum),.carry(carry));
initial
begin
for(i=0;i<8;i=i+1)
begin
{a,b,cin}=i;
#10;
$display("Time:%t | a=%b b=%b cin=%b  |sum=%b |carry=%b  |",$time,a,b,cin,sum,carry);
end
$finish();
end
endmodule



