//Testbench
module alu_tb();
reg [3:0]a,b;
reg [2:0]sel;
wire zero,cout;
wire [3:0]y;

alu dut(.a(a),.b(b),.sel(sel),.zero(zero),.cout(cout),.y(y));

initial
begin
a=4'b0100; b=4'b1111;

sel=3'b110;
#10;
sel=3'b000;
#10;
sel=3'b001;
#10;
sel=3'b010;
#10;
sel=3'b011;
#10;
sel=3'b100;
#10;
sel=3'b101;
#10;
sel=3'b111;
#10;
$finish;
end

initial
$monitor("Time=%t |sel=%3b |a=%4b |b=%4b |cout=%b |y=%4b  |zero=%b ",$time,sel,a,b,cout,y,zero);
endmodule

//Design Code

module alu(
input [3:0]a,b,
input [2:0]sel,
output reg  [3:0]y,
output reg cout,
output zero);


always@(*)
begin

case(sel)

3'b000:{cout,y}=a+b;
3'b001:{cout,y}=a-b;
3'b010:y=~b;
3'b011:y=a*b;
3'b100:y=a&b;
3'b101:y=a+1;
3'b110:y=a^b;
3'b111:y=a|b;
default:y=4'b0000;
endcase
end
assign zero=(y==4'b0000);
endmodule



