 //Design Code

module full_adder(input a,b,c, output sum,carry);
assign sum=a^b^c;
assign carry=(a&b) | (a&c) | (b&c);
endmodule

module ripple_carry_adder(a,b,c,sum,carry);
input [3:0]a,b;
input c;
output [3:0] sum;
output carry;
wire c1,c2,c3;

full_adder f1(.a(a[0]),.b(b[0]),.c(c),.sum(sum[0]),.carry(c1));
full_adder f2(.a(a[1]),.b(b[1]),.c(c1),.sum(sum[1]),.carry(c2));
full_adder f3(.a(a[2]),.b(b[2]),.c(c2),.sum(sum[2]),.carry(c3));
full_adder f4(.a(a[3]),.b(b[3]),.c(c3),.sum(sum[3]),.carry(carry));

endmodule

//Testbench

module ripple_carry_adder_tb();
reg [3:0]a,b;
reg c;
wire [3:0] sum;
wire carry;
integer i,j;

ripple_carry_adder dut(a,b,c,sum,carry);

initial
begin
c=0;
for(i=0;i<16;i=i+1)
begin
	for(j=0;j<16;j=j+1)
begin
a=i; b=j;
#10;
$display("Time=%t | a=%b |b=%b |c=%b |sum=%b |carry=%b", $time,a,b,c,sum,carry);
end
end
c=1;
for(i=0;i<16;i=i+1)
begin
	for(j=0;j<16;j=j+1)
begin
a=i; b=j;
#10;
$display("Time=%t | a=%b |b=%b |c=%b |sum=%b |carry=%b", $time,a,b,c,sum,carry);
end
end
$finish();
end
endmodule

