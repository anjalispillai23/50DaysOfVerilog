//Design Code
module mux8_1(s0,s1,s2,i, y);
input  [7:0]i;
input  s0,s1,s2;
output reg y;

always@(*)
begin
case({s0,s1,s2})
3'b000:y=i[0];
3'b001:y=i[1];
3'b010:y=i[2];
3'b011:y=i[3];
3'b100:y=i[4];
3'b101:y=i[5];
3'b110:y=i[6];
3'b111:y=i[7];
default: y = 1'b0;
endcase
end
endmodule

//Testbench

module tb_mux8_1();
reg s0,s1,s2;
reg [7:0]i;
wire y;
integer j;

mux8_1 dut(.s0(s0),.s1(s1),.s2(s2),.i(i),.y(y));

initial
begin
i=8'b010101011;

for(j=0;j<8;j=j+1)
begin
{s0,s1,s2}=j;
#10;
end

end

initial begin
        $monitor("Time=%0t | s0=%b s1=%b s3=%b | y=%b",
                  $time, s0, s1, s2, y);
#100;
$finish;
    end

endmodule
