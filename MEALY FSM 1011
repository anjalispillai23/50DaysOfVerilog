//Design Code

module mealy_1011 (
    input clk, rst, x,
    output reg y
);


    parameter S0 = 2'b00,
              S1 = 2'b01,
              S2 = 2'b10,
              S3 = 2'b11;

    reg [1:0] current, next;

    
    always @(posedge clk or posedge rst) begin
        if (rst)
            current <= S0;
        else
            current <= next;
    end


    always @(*) begin
        y = 0;  // default
        case (current)
            S0: begin
                if (x) next = S1;
                else   next = S0;
            end
            S1: begin
                if (x) next = S1;
                else   next = S2;
            end
            S2: begin
                if (x) next = S3;
                else   next = S0;
            end
            S3: begin
                if (x) begin
                    next = S1;
                    y = 1;   
                end
                else next = S2;
            end
            default: next = S0;
        endcase
    end
endmodule

//Testbench
module tb_mealy_1011;
    reg clk, rst, x;
    wire y;

    mealy_1011 dut(clk, rst, x, y);

    initial clk=0;
    always #5 clk=~clk;

    initial begin
        rst=1; x=0;
        #10 rst=0;

       
        #10 x=1;
        #10 x=0;
        #10 x=1;
        #10 x=1;  
        #10 x=0;
        #10 x=1;
        #10 x=1;  
        #20 $finish;
    end

    initial begin
        $monitor("time=%0t x=%b y=%b state=%0d", $time, x, y, dut.current);
    end
endmodule


